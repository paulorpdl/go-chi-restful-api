

trigger:
- master

pool:
  vmImage: ubuntu-latest

parameters:
  - name: "containerRepository"
    type: "string"
    default: "continuous-delivery/post-service"

variables:
  CGO_ENABLED: '0' # Evitar linkeado de librerias del OS, para crear un binario funcional para Scratch Container
  GOOS: 'linux'
  GOARCH:  'amd64'
  tag: "latest"

steps: 
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        HASH=$(git describe --match 'v[0-9]*' --dirty='.m' --always --tags)
        echo Git commit id: $HASH
        echo "###vso[task.setvariable variable=tag]$HASH"
        echo Tag for image: ${tag}
    displayName: "Get commit id for tagging"
  - task: GoTool@0
    inputs:
      version: '1.16.13'
    displayName: "Setup Golang env"
  - task: Go@0
    inputs:
      command: 'get' 
      arguments: '-d'
      workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: "Get Dependencies"
  - task: Go@0
    inputs:
      command: 'test'
      arguments: "-v ./..."
      workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: "Test application"
  - task: Go@0
    inputs:
      command: 'build'
      arguments: '-a -o _output/app'
      workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: "Build application"
  - task: Docker@2
    inputs:
      command: buildAndPush
      repository: ${{ parameters.containerRepository }}
      containerRegistry: paulorpdl-container-registry
      Dockerfile: "**/Containerfile"
      tags: | 
        latest
        ${variables.tag}